const getWeekNumber=date=>{const j1=new Date(date.getFullYear(),0,1);return Math.ceil(((date.getTime()-j1.getTime())/864e5+j1.getDay()+1)/7)},nw=(value,words)=>{value=Math.abs(value)%100;var num=value%10;return 10<value&&20>value?words[2]:1<num&&5>num?words[1]:1==num?words[0]:words[2]},Translate={en:{ago:"ago",year:["year","years","years"],month:["month","months","months"],week:["week","weeks","weeks"],day:["day","days","days"],hour:["hour","hours","hours"],minute:["minute","minutes","minutes"]},ru:{ago:"\u043D\u0430\u0437\u0430\u0434",year:["\u0433\u043E\u0434","\u0433\u043E\u0434\u0430","\u043B\u0435\u0442"],month:["\u043C\u0435\u0441\u044F\u0446","\u043C\u0435\u0441\u044F\u0446\u0430","\u043C\u0435\u0441\u044F\u0446\u0435\u0432"],week:["\u043D\u0435\u0434\u0435\u043B\u044F","\u043D\u0435\u0434\u0435\u043B\u0438","\u043D\u0435\u0434\u0435\u043B\u044C"],day:["\u0434\u0435\u043D\u044C","\u0434\u043D\u044F","\u0434\u043D\u0435\u0439"],hour:["\u0447\u0430\u0441","\u0447\u0430\u0441\u0430","\u0447\u0430\u0441\u043E\u0432"],minute:["\u043C\u0438\u043D\u0443\u0442\u0430","\u043C\u0438\u043D\u0443\u0442\u044B","\u043C\u0438\u043D\u0443\u0442"]}},DateViewFormat="date,time",DateDialogFormat="date,time,ago";class WCTime extends HTMLTimeElement{Date;Inited;FormatDate;FormatTime;ShowDialog;ViewFormat;DateDialog;DateViewFormat;DateDialogFormat;DateAsString;DateHint;DateCssHint;ShowHintDialog;defaultIntDateOptions;Lang;Translate;intl;constructor(){super(),this.Inited=!1,this.ShowDialog="0"!==this.getAttribute("data-show-dialog"),this.Lang=this.getAttribute("lang")||navigator.language.replace(/-\w{1,2}/gm,""),this.Translate=phrase=>Translate[this.Lang||"en"][phrase],this.FormatDate=this.getAttribute("data-format-date")||"day,month,year",this.FormatTime=this.getAttribute("data-format-time")||"hour,minute",this.classList.add("wc-time")}static get observedAttributes(){return["datetime"]}attributeChangedCallback(name){"datetime"===name&&this.Init()}connectedCallback(){!1===this.Inited&&(this.Init(),this.Inited=!0)}Init(){this.DateDialogFormat=this.getAttribute("data-dialog-format")||DateDialogFormat,this.DateViewFormat=this.getAttribute("data-view-format")||DateViewFormat,this.ShowHintDialog="1"===this.getAttribute("data-show-hint-in-dialog")||!1,this.DateCssHint="1"===this.getAttribute("data-css-hint")||!1,this.DateHint=this.getAttribute("data-date-hint")||"",this.DateAsString="1"===this.getAttribute("data-as-string")||!1,this.Date=new Date(this.getAttribute("datetime")||Date.now());const language=this.Lang,defaultIntDateOptions=this.defaultIntDateOptions={timeZone:this.getAttribute("data-format-timeZone")||Intl.DateTimeFormat().resolvedOptions().timeZone,hour12:null!==this.getAttribute("data-format-hour12")||!1,weekday:this.getAttribute("data-format-weekday")||"long",era:this.getAttribute("data-format-era")||"long",year:this.getAttribute("data-format-year")||"numeric",month:this.getAttribute("data-format-month")||"long",day:this.getAttribute("data-format-day")||"numeric",hour:this.getAttribute("data-format-hour")||"2-digit",minute:this.getAttribute("data-format-minute")||"2-digit",second:this.getAttribute("data-format-second")||"2-digit",timeZoneName:this.getAttribute("data-format-timeZoneName")||"short"};if(this.intl=(propDateNames,declension=!1)=>{let options={};for(let i=0;i<propDateNames.length;i++){const propDateName=propDateNames[i];if(options[propDateName]=defaultIntDateOptions[propDateName],declension&&"month"===propDateName)return options.day=defaultIntDateOptions.day,new Intl.DateTimeFormat([language,"en"],options).format(this.Date).replace(/\d\d? /,"");"era"===propDateName&&(options.year="numeric")}return new Intl.DateTimeFormat([language,"en"],options).format(this.Date)},this.onpointerenter=()=>this.showDateDialog(),this.onpointercancel=()=>this.hideDateDialog(),this.onpointerleave=()=>this.hideDateDialog(),this.DateCssHint&&this.setAttribute("data-tooltip",`${this.DateHint}${this.renderTimeString(this.DateDialogFormat,!1)}`),!0===this.DateAsString)this.innerText=this.renderTimeString(this.DateViewFormat,!1);else{let spanNode=document.createElement("span");spanNode.innerHTML=this.renderTimeString(this.DateViewFormat),this.innerHTML=spanNode.outerHTML}}hideDateDialog(){this.ShowDialog&&this.DateDialog instanceof HTMLDialogElement&&(this.DateDialog.close(),this.DateDialog.parentElement.removeChild(this.DateDialog),this.DateDialog=null)}showDateDialog(){if(this.ShowDialog&&!1===this.DateCssHint){if(this.DateDialog=document.createElement("dialog"),this.DateDialog.style.whiteSpace="nowrap",this.append(this.DateDialog),this.DateDialog.innerHTML=this.renderTimeString(this.DateDialogFormat),this.DateHint){const spanHint=document.createElement("span");spanHint.classList.add("-hint"),spanHint.innerText=this.DateHint,this.DateDialog.prepend(spanHint)}this.DateDialog.show()}}renderTimeString(formatViewString,asHtml=!0){const d=this.Date,resultSpan=document.createElement("span"),nowDate=new Date,Yeardiff=nowDate.getFullYear()-d.getFullYear(),make={date:()=>{const intl=this.intl,spanDate=document.createElement("span");spanDate.classList.add("-date");const formatDateItems=this.FormatDate.split(",");for(let i=0;i<formatDateItems.length;i++){const date=formatDateItems[i];spanDate.innerHTML+="month"===date&&formatDateItems.includes("day")?`<span class="-month"> ${intl(["month"],!0)} </span>`:"year"===date?` ${0<Yeardiff?`<span class="-year">${intl(["year"])} </span>`:``}`:`<span class="-${date}">${intl([date])} </span>`}return spanDate},time:()=>{const intl=this.intl,spanTime=document.createElement("span");return spanTime.classList.add("-time"),spanTime.innerHTML+=`${intl(this.FormatTime.split(","))}`,spanTime},ago:()=>{var _Mathround=Math.round;const Translate=this.Translate,agoText=Translate("ago"),spanAgo=document.createElement("span");if(spanAgo.classList.add("-ago"),0<Yeardiff)return spanAgo.innerHTML=`${Yeardiff} ${nw(Yeardiff,Translate("year"))} ${agoText}`,spanAgo;const MonthDiff=nowDate.getMonth()-d.getMonth();if(1<MonthDiff)return spanAgo.innerHTML=`${MonthDiff} ${nw(MonthDiff,Translate("month"))} ${agoText}`,spanAgo;const WeekDiff=getWeekNumber(nowDate)-getWeekNumber(d);if(1<WeekDiff&&0<=MonthDiff)return spanAgo.innerHTML=`${WeekDiff} ${nw(WeekDiff,Translate("week"))} ${agoText}`,spanAgo;const DaysDiff=_Mathround((nowDate.getTime()-d.getTime())/1e3/60/60/24);if(0<DaysDiff&&0<=WeekDiff)return spanAgo.innerHTML=` ${DaysDiff} ${nw(DaysDiff,Translate("day"))} ${agoText}`,spanAgo;const HoursDiff=_Mathround((nowDate.getTime()-d.getTime())/1e3/60/60);if(0<HoursDiff&&1>DaysDiff)return spanAgo.innerHTML=` ${HoursDiff} ${nw(HoursDiff,Translate("hour"))} ${agoText}`,spanAgo;const MinsDiff=_Mathround((nowDate.getTime()-d.getTime())/1e3/60);return 0<MinsDiff&&1>HoursDiff?(spanAgo.innerHTML=` ${MinsDiff} ${nw(MinsDiff,Translate("minute"))} ${agoText}`,spanAgo):spanAgo}};return formatViewString.split(",").map(type=>make[type].apply(this)).map(node=>resultSpan.append(node)),asHtml?resultSpan.innerHTML:resultSpan.innerText}}export default WCTime;